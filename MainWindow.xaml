<Window x:Class="PlaylistsMadeEasy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PlaylistsMadeEasy"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        ShowInTaskbar="True"
        WindowStyle="ThreeDBorderWindow"
        Icon="Images/MusicIcon-Black.jpg"
         Height="600" Width="1000"
        SizeToContent="WidthAndHeight" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
        MinWidth="600"
        MinHeight="380" Background="#FFAEBDBC">
    <Window.Resources>
        <system:String x:Key="PlaylistTextBoxStartingText">Enter the Path to the Playlists</system:String>
        <system:String x:Key="MusicTextBoxStartingText">Enter the Path to the Music</system:String>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="5 5 5 5"/>
            <Setter Property="BorderThickness" Value="0.1"/>
            <Setter Property="Background" Value="Beige"/>
            <Setter Property="Foreground" Value="#FF2E4993"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="0 5 0 0"/>
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="0 5 10 0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="21"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="MaxWidth" Value="60"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type Label}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="DockPanel.Dock" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Bottom"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
        </Style>
        <Style TargetType="{x:Type ListBox}">
            <Setter Property="Margin" Value="5 5 5 5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        </Style>
        <Style TargetType="{x:Type ListView}">
            <Setter Property="Margin" Value="5 5 5 5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        </Style>
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="Beige"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="Beige"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
        </Style>
        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="1.25"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="Beige"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Height" Value="12.5"/>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Margin" Value="5 5 5 5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type StatusBar}">
            <Setter Property="Background" Value="Beige"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0 5 0 0"/>
            <Setter Property="Height" Value="20"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="0 -2.5 5 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="5 0 5 0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="Beige"/>
            <EventSetter Event="GotFocus" Handler="textbox_GotFocus"/>
            <Style.Triggers >
                <Trigger Property= "Validation.HasError" Value= "true" >
                    <Setter Property= "ToolTip"  Value= "{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger >
            </Style.Triggers >
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="local:CustomCommands.Exit" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed" />
        <CommandBinding Command="local:CustomCommands.GetPlaylistPath" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="local:CustomCommands.GetMusicPath" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="local:CustomCommands.SelectPaths" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="local:CustomCommands.StartTransfer" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="local:CustomCommands.LoadPlaylists" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="local:CustomCommands.RemoveSelected" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="local:CustomCommands.RemoveAll" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="local:CustomCommands.ViewSongs" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="local:CustomCommands.EditSongs" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="local:CustomCommands.GetDifferenceBetweenPlaylists" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="local:CustomCommands.WritePreferences" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
    </Window.CommandBindings>
    <DockPanel>
        <DockPanel.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="Margin" Value="5 5 5 0"/>
                <Setter Property="BorderBrush" Value="#FF9F9A8A"/>
                <Setter Property="BorderThickness" Value="2.5"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="White" Offset="0" />
                            <GradientStop Color="LightBlue" Offset=".5" />
                            <GradientStop Color="White" Offset="1.3" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect">
                    <Setter.Value>
                            <DropShadowEffect BlurRadius="1" ShadowDepth="1.25" Color="#FF166F96" Direction="315"/>
                    </Setter.Value>
                </Setter>
            </Style>
        </DockPanel.Resources>
        <Menu Width="Auto" DockPanel.Dock="Top" Grid.Column="0" Margin="0 0 0 0"  FontSize="14" VerticalAlignment="Center" Grid.ColumnSpan="3">
            <MenuItem Header="_File" VerticalAlignment="Center" >
                <!--todo: implement open playlist on menu-->
                <MenuItem Header="_Open Playlist" >
                    <MenuItem.Icon>
                        <Image Source="Images/File.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Select Paths" Command="local:CustomCommands.SelectPaths"  >
                    <MenuItem.Icon>
                        <Image Source="Images/FolderClosed.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Start Transfer" Command="local:CustomCommands.StartTransfer">
                    <MenuItem.Icon>
                        <Image Source="Images/Transfer Icon.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Foreground="Black"/>
                <MenuItem Header="_Exit"  Command="local:CustomCommands.Exit"/>
            </MenuItem>
            <MenuItem Header="_Options" VerticalAlignment="Center">
                <MenuItem Name="MenuItem_RememberPathes" Command="local:CustomCommands.WritePreferences" Header="R_emember Paths and Device Name" IsCheckable="True" IsChecked="{Binding Path=MenuItem_RememberPathes_Flag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <MenuItem Name="MenuItem_GetPlaylistDifference" Command="local:CustomCommands.GetDifferenceBetweenPlaylists" Header="Find Differences Between Playlists" IsCheckable="True"  ToolTip="Exactly two playlists must be selected to use this"/>
                <MenuItem Name="MenuItem_ForceCopy" Header="Force _Copy of Playlists" IsChecked="{Binding MenuItem_ForceCopy_Flag,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsCheckable="True"  ToolTip="Will check the playlists even if they are the same between computer and device."/>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom" HorizontalContentAlignment="Left">
            <StatusBar.Resources>
                <Style TargetType="{x:Type StatusBarItem}">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="0"/>
                </Style>
            </StatusBar.Resources>
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="400" Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>

            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0" >
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Playlist:" FontWeight="Bold"/>
                    <TextBlock x:Name="StatusBarLabel_Playlist" TextAlignment="Left" Text="{Binding Path=CurrentPlaylistBeingCopied, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="File:" FontWeight="Bold"/>
                    <TextBlock x:Name="StatusBarLabel_File" TextAlignment="Left" Text="{Binding Path=CurrentFileBeingCopied, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <DockPanel LastChildFill="True">
                    <ProgressBar Value="{Binding Path=ProgressBar_Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                </DockPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <DockPanel LastChildFill="True">
                    <TextBlock x:Name="StatusBarLabel_CurrentCount" TextAlignment="Left" Text="{Binding Path=CurrentNumberOfFileBeingCopied, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Text="/"/>
                    <TextBlock DockPanel.Dock="Right" x:Name="StatusBarLabel_TotalCount" TextAlignment="Left" Text="{Binding Path=TotalFilesToCopyForThisPlaylist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </DockPanel>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="310"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <DockPanel LastChildFill="True" Grid.Row="0">
                <Border DockPanel.Dock="Top">
                    <DockPanel Grid.ColumnSpan="1" LastChildFill="True">
                        <Label Content="Path to _Playlists:" DockPanel.Dock="Top" Target="Textbox_PlaylistPath"/>
                        <TextBox x:Name="Textbox_PlaylistPath" Text="{Binding Path=DirectoryToPlaylists, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" DockPanel.Dock="Top" TabIndex="0"/>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <Label Content="_Source Type:"  Target="ComboBox_SourcePlaylistType" DockPanel.Dock="Top" FontSize="12" FontWeight="Regular"/>
                            <ComboBox Name="ComboBox_SourcePlaylistType" SelectionChanged="ComboBox_SourcePlaylistType_SelectionChanged" />
                            <Label Content="_Target Type:" DockPanel.Dock="Top" FontSize="12" FontWeight="Regular" Target="ComboBox_TargetPlaylistType"/>
                            <ComboBox Name="ComboBox_TargetPlaylistType"/>
                        </StackPanel>
                        <Button x:Name="Button_GetPlaylistPath" DockPanel.Dock="Left" Command="local:CustomCommands.GetPlaylistPath" >
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Browse" />
                                <Image Source="Images/FolderClosed.png" MaxHeight="10" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        <CheckBox x:Name="CheckBox_SavePlaylistLocation" IsEnabled="False" Content="Remember Path?" IsChecked="True" VerticalAlignment="Center" DockPanel.Dock="Left">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                        <Button x:Name="Button_LoadPlaylists" Content="_Load Playlists" Command="local:CustomCommands.LoadPlaylists"/>
                    </DockPanel>
                </Border>
                <Border DockPanel.Dock="Top">
                    <DockPanel Grid.ColumnSpan="1" LastChildFill="True">
                        <Label Content="Path to _Music:" DockPanel.Dock="Top" Target="Textbox_MusicPath"/>
                        <TextBox x:Name="Textbox_MusicPath" Text="{Binding Path=MusicDirectory ,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" DockPanel.Dock="Top" TabIndex="0"/>
                        <Button x:Name="Button_GetMusicPath" DockPanel.Dock="Left" Command="local:CustomCommands.GetMusicPath" >
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Browse" />
                                <Image Source="Images/FolderClosed.png" MaxHeight="10" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        <CheckBox x:Name="CheckBox_SaveMusicLocation" IsEnabled="False" Content="Remember Path?" IsChecked="True" VerticalAlignment="Center" DockPanel.Dock="Left">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                        <Button x:Name="Button_StartTransfer" Content="Start T_ransfer" Command="local:CustomCommands.StartTransfer"/>

                    </DockPanel>
                </Border>
                <Border VerticalAlignment="Top" DockPanel.Dock="Top">
                    <DockPanel Grid.ColumnSpan="1" LastChildFill="True">
                        <Label Content="Device _Name:" Target="Textbox_DeviceName" />
                        <TextBox x:Name="Textbox_DeviceName" Text="{Binding Path=DeviceName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True,ValidatesOnExceptions=True}" DockPanel.Dock="Top" TabIndex="0"/>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <Label Content="Storage Location:" FontSize="12" FontWeight="Regular"/>
                            <RadioButton x:Name="RadioButton_Phone" GroupName="PhoneDestination" Content="P_hone"/>
                            <RadioButton x:Name="RadioButton_SD" GroupName="PhoneDestination" Content="S_D Card" IsChecked="True"/>
                        </StackPanel>
                    </DockPanel>
                </Border>
                <Border DockPanel.Dock="Top">
                    <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Label Content="T_ransfer Progress:" Margin="0" Padding="0" Grid.Row="0" HorizontalAlignment="Center" Target="TextBlock_Progress"/>
                            <TextBlock x:Name="TextBlock_Progress" Margin="2.5 0 2.5 0"  Grid.Row="1" Text="{Binding Path=TransferProgress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </DockPanel>
            <Border Grid.Column="1" DockPanel.Dock="Top">
                <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Padding="0 0 0 0" Margin="5 5 5 5" PreviewMouseWheel="lvPlaylists_PreviewMouseWheel">
                    <Grid>
                    <Label Content="Select the Pl_aylists to Transfer:"  FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" Target="lvPlaylists"/>
                    <ListView Name="lvPlaylists" Width="Auto" MinWidth="200" Margin="0" MouseDoubleClick="lvPlaylists_MouseDoubleClick" >
                        <ListView.ContextMenu>
                            <ContextMenu x:Name="cm_lvPlaylists">
                                <MenuItem Header = "View Songs" Command="local:CustomCommands.ViewSongs"/>
                                <Separator />
                                <MenuItem Header = "Remove Selected" Command="local:CustomCommands.RemoveSelected" />
                                <MenuItem Header="Remove All (Clear)" Command="local:CustomCommands.RemoveAll"  />
                            </ContextMenu >
                        </ListView.ContextMenu>
                        <ListView.Resources>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="FontWeight" Value="Regular"/>
                                <Setter Property="Width" Value="Auto"/>
                            </Style>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView x:Name="gvPlaylists">
                                <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Name}">
                                    <GridViewColumnHeader MinWidth="100" Tag="Name" Click="lvPlaylistsColumnHeader_Click" Content="Playlist Name" HorizontalContentAlignment="Left"/>
                                </GridViewColumn>

                                <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Path}">
                                    <GridViewColumnHeader Tag="Path" Click="lvPlaylistsColumnHeader_Click" Content="Path" MinWidth="220"/>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    </Grid>
                </ScrollViewer>
            </Border>
            
            <Border Grid.Column="2" DockPanel.Dock="Top">
                <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Padding="0 0 0 0" Margin="5 5 5 5" PreviewMouseWheel="lvPlaylists_PreviewMouseWheel">
                    <Grid>
                        <Label Content="Select the Songs to Edit:"  FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" Target="lvSongs"/>
                        <ListView Name="lvSongs" Width="Auto" MinWidth="200" Margin="0">
                            <ListView.ContextMenu>
                                <ContextMenu x:Name="cm_lvSongs">
                                    <MenuItem Header = "Edit Selected Songs" Command="local:CustomCommands.EditSongs"/>
                                    <Separator />
                                    <MenuItem Header = "Remove Selected" Command="local:CustomCommands.RemoveSelected" />
                                    <MenuItem Header="Remove All (Clear)" Command="local:CustomCommands.RemoveAll"  />
                                </ContextMenu >
                            </ListView.ContextMenu>
                            <ListView.Resources>
                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FontWeight" Value="Regular"/>
                                    <Setter Property="Width" Value="Auto"/>
                                </Style>
                            </ListView.Resources>
                            <ListView.View>
                                <GridView x:Name="gvSongs">
                                    <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Artists[0]}">
                                        <GridViewColumnHeader Tag="Name" Click="lvPlaylistsColumnHeader_Click" Content="Artists" HorizontalContentAlignment="Left"/>
                                    </GridViewColumn>
                                    <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Title}">
                                        <GridViewColumnHeader  Tag="Name" Click="lvPlaylistsColumnHeader_Click" Content="Title" HorizontalContentAlignment="Left"/>
                                    </GridViewColumn>
                                    <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Album}">
                                        <GridViewColumnHeader  Tag="Name" Click="lvPlaylistsColumnHeader_Click" Content="Album" HorizontalContentAlignment="Left"/>
                                    </GridViewColumn>
                                    <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding PlaylistName}">
                                        <GridViewColumnHeader Tag="Name" Click="lvPlaylistsColumnHeader_Click" Content="Song Name" HorizontalContentAlignment="Left"/>
                                    </GridViewColumn>
                                    <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Path}">
                                        <GridViewColumnHeader Tag="Path" Click="lvPlaylistsColumnHeader_Click" Content="Path" HorizontalContentAlignment="Left"/>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </ScrollViewer>
            </Border>
        </Grid>

    </DockPanel>
</Window>
